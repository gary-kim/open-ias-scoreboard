{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///./src/ui/src/control.js","webpack:///./node_modules/get-in-range/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","ipc","ipcRenderer","gir","data","clock","state","countdown","last","Date","current","display","HTMLDivElement","displaystate","home","scoreDisplay","logo","HTMLImageElement","guest","tab","HTMLButtonElement","createnewscoreboard","JSON","parse","stringify","newscoreboard","tmp","tr","document","createElement","setAttribute","toString","classList","add","innerText","addEventListener","e","setscoreboardtab","currentTarget","getAttribute","controls","querySelector","content","children","cloneNode","action","send","id","rename_tab","teamscorecontrols","setOn","attachTo","changeScore","newtitle","ipcToScoreboard","toggleClock","preventDefault","minutes","seconds","clockset","checked","setteamlogo","ondragover","ondrop","dataTransfer","files","length","test","item","type","image_path","path","src","changeName","newscoreboardtab","newtab","appendChild","miliseconds","delta","Math","floor","padStart","changeBy","score","sbid","changeTo","querySelectorAll","forEach","curr","remove","ctrl","scoreboardList","push","scoreboard","channel","msg","cron","each","change","window","onload","setInterval","on","scoreboards","indexOf","activeElement","matches","arg","setto","input","min","max","onerr","pinput","parseFloat","pmin","pmax","isNaN","NaN"],"mappings":"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","file":"control.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"electron\");","/*\n    Open IAS Scoreboard is an Electron based scoreboard application for IASAS event livestreams.\n    Copyright (C) 2019 Gary Kim <gary@garykim.dev>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, version 3.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n/**\n * @file Run control board\n * @license AGPL-3.0\n * @author Gary Kim\n */\n\nconst electron = require('electron');\nconst ipc = electron.ipcRenderer;\n\nconst gir = require('get-in-range');\n\nlet data = [{\n    clock: {\n        state: false,\n        countdown: true,\n        last: new Date(),\n        current: 0,\n        display: HTMLDivElement,\n        displaystate: HTMLDivElement\n    },\n    home: {\n        current: 0,\n        scoreDisplay: HTMLDivElement,\n        logo: HTMLImageElement\n    },\n    guest: {\n        current: 0,\n        scoreDisplay: HTMLDivElement,\n        logo: HTMLImageElement\n    },\n    tab: HTMLButtonElement\n}];\n\nlet current = 0;\n\nwindow.onload = main;\n\nfunction main() {\n    setInterval(cron, 500);\n\n\n    // Attach global event listeners\n    document.querySelector('#new-tab-button').addEventListener('click', () => {\n        ipc.send('create-scoreboard');\n    });\n    document.querySelector('#about-program').addEventListener('click', () => {\n        ipc.send('open-about-program');\n    });\n}\n\n/**\n * Creates a new scoreboard and assigns the related information and nodes to the data object.\n *\n * @param {number} name The index number of the new scoreboard.\n */\nfunction createnewscoreboard(name) {\n    data[name] = JSON.parse(JSON.stringify(data[0]));\n    let newscoreboard = newscoreboardtab(name);\n    let newtab = document.querySelector('.tabs').appendChild(newscoreboard.tab);\n    document.querySelector('.content').appendChild(newscoreboard.controls);\n    data[name].tab = newtab;\n    setscoreboardtab(name);\n}\n\n/**\n * Create new scoreboard control nodes and attach required nodes to data object.\n *\n * @param {number} name The position in the data array of this new scoreboard.\n * @returns {Object} An object with {tab: Node, controls: Node}.\n */\nfunction newscoreboardtab(name) {\n    let tr = {};\n    let tmp;\n\n    // Create new tab\n    tr.tab = document.createElement('button');\n    tr.tab.setAttribute('scoreboard-id', name.toString());\n    tr.tab.classList.add(\"tab-button\");\n    tr.tab.innerText = `Scoreboard #${name.toString()}`;\n    tr.tab.addEventListener('click', (e) => { setscoreboardtab(e.currentTarget.getAttribute('scoreboard-id')); });\n\n    // Create new scoreboard controls for the new tab.\n    tr.controls = document.querySelector('template#newcontrols').content.children[0].cloneNode(true);\n    tr.controls.setAttribute('scoreboard-id', name.toString());\n\n    // Scoreboard overall controls\n    tr.controls.querySelector('#visibility').addEventListener('click', (e) => {\n        let action = (e.currentTarget.checked) ? 'show' : 'hide';\n        ipc.send('window-op', { 'id': name, action: action });\n    });\n    tr.controls.querySelector('#close-tab').addEventListener('click', () => {\n        ipc.send('window-op', { id: name, action: 'close' });\n    });\n    tr.controls.querySelector('#focus-window').addEventListener('click', () => {\n        ipc.send('window-op', { id: name, action: 'focus' });\n    });\n    let rename_tab = tr.controls.querySelector('#rename-tab');\n    rename_tab.value = `Scoreboard #${name}`;\n    rename_tab.addEventListener('input', (e) => {\n        let newtitle = e.currentTarget.value;\n        data[name].tab.innerText = newtitle;\n        ipcToScoreboard(name, 'title-set', newtitle);\n    });\n\n    // clock controls\n    tr.controls.querySelector('#clock-toggle').addEventListener('click', () => {\n        toggleClock(name);\n    });\n    data[name].clock.display = tr.controls.querySelector('#clock-current');\n    data[name].clock.displaystate = tr.controls.querySelector('#clock-state');\n\n    // Set the clock\n    tr.controls.querySelector('#clock-set-submit').addEventListener('click', (e) => {\n        e.preventDefault();\n        let minutes = gir(tr.controls.querySelector('#clock-set-minutes').value, 0, 99);\n        let seconds = gir(tr.controls.querySelector('#clock-set-seconds').value, 0, 59);\n        clockset(name, ((minutes * 60) + seconds) * 1000);\n    });\n    // Set clock count down or count up.\n    tr.controls.querySelector('#clock-direction').addEventListener('click', (e) => {\n        data[name].clock.countdown = e.currentTarget.checked;\n    });\n    // Also allow easy incrementing of clock\n    tr.controls.querySelector('#increase-clock').addEventListener('click', () => {\n        clockset(name, gir(data[name].clock.current + 1000, 0, 5999000));\n    });\n\n    tr.controls.querySelector('#decrease-clock').addEventListener('click', () => {\n        clockset(name, gir(data[name].clock.current - 1000, 0, 5999000));\n    });\n\n    // Scoreboard scaling controls\n    tr.controls.querySelector('#scoreboard-scaling').addEventListener('change', (e) => {\n        ipcToScoreboard(name, 'scale', e.currentTarget.value);\n    });\n\n    // Set team logo controls\n    data[name].home.logo = tr.controls.querySelector('.logo-select.home img');\n    data[name].guest.logo = tr.controls.querySelector('.logo-select.guest img');\n\n    tr.controls.querySelector('.logo-select.home button').addEventListener('click', () => {\n        setteamlogo(true, name);\n    });\n    tmp = tr.controls.querySelector('.logo-select.home .img-container');\n    tmp.ondragover = (e) => {\n        e.preventDefault();\n    };\n    tmp.ondrop = (e) => {\n        e.preventDefault();\n        \n        if (e.dataTransfer.files.length !== 1 || !/^image\\/.+/.test(e.dataTransfer.files.item(0).type)) {\n            // TODO: Tell user they have either given too many files or an incorrect file type.\n            return;\n        } \n        ipcToScoreboard(name, 'set-logo', {'home': true, 'image_path': e.dataTransfer.files.item(0).path});\n\n        e.currentTarget.querySelector('img').src = e.dataTransfer.files.item(0).path;\n\n    };\n    tr.controls.querySelector('.logo-select.guest button').addEventListener('click', () => {\n        setteamlogo(false, name);\n    });\n    tmp = tr.controls.querySelector('.logo-select.guest .img-container');\n    tmp.ondragover = (e) => {\n        e.preventDefault();\n    };\n    tmp.ondrop = (e) => {\n        e.preventDefault();\n        \n        if (e.dataTransfer.files.length !== 1 || !/^image\\/.+/.test(e.dataTransfer.files.item(0).type)) {\n            // TODO: Tell user they have either given too many files or an incorrect file type.\n            return;\n        } \n        ipcToScoreboard(name, 'set-logo', {'home': false, 'image_path': e.dataTransfer.files.item(0).path});\n\n        e.currentTarget.querySelector('img').src = e.dataTransfer.files.item(0).path;\n\n    };\n\n\n    // Set team name controls\n    tr.controls.querySelector('#home-name').addEventListener('input', (e) => {\n        changeName(name, true, e.currentTarget.value);\n    });\n    tr.controls.querySelector('#guest-name').addEventListener('input', (e) => {\n        changeName(name, false, e.currentTarget.value);\n    });\n\n\n    // team score controls\n    teamscorecontrols(data[name].home, tr.controls.querySelector('#home-controls'), true);\n    teamscorecontrols(data[name].guest, tr.controls.querySelector('#guest-controls'), false);\n    /**\n     * \n     * @param {Object} setOn Data object for specific team.\n     * @param {Node} attachTo Node with div of team controls.\n     * @param {boolean} home Setting for home?\n     * \n     */\n    function teamscorecontrols(setOn, attachTo, home) {\n        setOn.scoreDisplay = attachTo.querySelector('.team-score');\n        attachTo.querySelector('.increase-score').addEventListener('click', () => { changeScore(name, home, 1); });\n        attachTo.querySelector('.decrease-score').addEventListener('click', () => { changeScore(name, home, -1); });\n    }\n\n    return tr;\n}\n\n/**\n * Sets the clock time then updates the clock on the control board and scoreboard.\n *\n * @param {string|number} name  Scoreboard to set on.\n * @param {number} miliseconds  Time to set clock to in miliseconds.\n * @param {boolean} [delta]  Should change by miliseconds?\n */\nfunction clockset(name, miliseconds, delta) {\n    if (delta === true) {\n        data[name].clock.current = gir(data[name].clock.current + miliseconds, 0, 5999000);\n    } else {\n        data[name].clock.current = miliseconds;\n    }\n    data[name].clock.display.innerText = `${Math.floor(data[name].clock.current / 1000 / 60).toString().padStart(2, '0')}:${Math.floor(data[name].clock.current / 1000 % 60).toString().padStart(2, '0')}`;\n    ipcToScoreboard(name, 'update-clock', data[name].clock.current / 1000);\n}\n\n/**\n * Start or stop the clock of the specified scoreboard.\n * \n * @param {string|number} name Scoreboard to toggle clock on.\n */\nfunction toggleClock(name) {\n    let clock = data[name].clock;\n    clock.last = new Date();\n    clock.state = !clock.state;\n    clock.displaystate.innerText = clock.state ? 'Running' : 'Stopped';\n}\n\n/**\n * Change score of team.\n *\n * @param {string|number} name  Scoreboard to set on.\n * @param {boolean} home  Set on home?\n * @param {number} changeBy  The value to change score by.\n */\nfunction changeScore(name, home, changeBy) {\n    let setOn = data[name][home ? 'home' : 'guest'];\n    setOn.current = gir(setOn.current + changeBy, 0, 99);\n    setOn.scoreDisplay.innerText = setOn.current.toString().padStart(2, '0');\n    ipcToScoreboard(name, 'set-score', { score: setOn.current, home: home });\n}\n\n/**\n * Changes the name of a team.\n * \n * @param {number} sbid The id of the scoreboard to set on.\n * @param {boolean} home Set on home?\n * @param {string} changeTo The text to change the name to.\n */\nfunction changeName(sbid, home, changeTo) {\n    ipcToScoreboard(sbid, 'set-name', { home: home, changeTo: changeTo });\n}\n\n/**\n * Set the control window to be controlling another scoreboard tab.\n *\n * @param {string|name} name  Scoreboard to change tab to.\n */\nfunction setscoreboardtab(name) {\n    current = name;\n    document.querySelectorAll('.tabs > button').forEach((curr) => {\n        if (curr.getAttribute('scoreboard-id').toString() === current.toString()) {\n            curr.classList.add('active');\n        } else {\n            curr.classList.remove('active');\n        }\n    });\n    document.querySelectorAll('.controls').forEach((ctrl) => {\n        if (ctrl.getAttribute('scoreboard-id').toString() === current.toString()) {\n            ctrl.classList.remove('hidden');\n        } else {\n            ctrl.classList.add('hidden');\n        }\n    });\n}\n\n/**\n * @returns {number[]} All scoreboard indexes.\n */\nfunction scoreboardList() {\n    let tr = [];\n    for (let i = 1; i < data.length; i++) {\n        if (data[i]) {\n            tr.push(i);\n        }\n    }\n    return tr;\n}\n\n/**\n * \n * Brings up dialog where team logo can be chosen.\n * \n * @param {boolean} home  Set for home?\n * @param {number} sbid  Scoreboard id for team logo to be set for.\n * \n */\nfunction setteamlogo(home, sbid) {\n    ipc.send('set-logo', { scoreboard: sbid, home: home });\n}\n\n/**\n * Send a message to a scoreboard.\n * \n * @param {number} name Scoreboard id for the scoreboard to send to.\n * @param {string} channel Channel to be sent to scoreboard on. \n * @param {*} msg Message to send to scoreboard.\n */\nfunction ipcToScoreboard(name, channel, msg) {\n    ipc.send('relay', name, channel, msg);\n}\n\n/**\n * Function to run tasks that require constant repeating.\n */\nfunction cron() {\n    for (let i = 1; i < data.length; i++) {\n        if (!data[i]) continue;\n        let each = data[i];\n        if (each.clock.state) {\n            let current = new Date();\n            let change = (each.clock.countdown)? (each.clock.last - current) : -(each.clock.last - current);\n            each.clock.current = gir(each.clock.current + change, 0, 5999000);\n            each.clock.last = current;\n            ipcToScoreboard(i, 'update-clock', each.clock.current / 1000);\n            data[i].clock.display.innerText = `${Math.floor(each.clock.current / 1000 / 60).toString().padStart(2, '0')}:${Math.floor(each.clock.current / 1000 % 60).toString().padStart(2, '0')}`;\n        }\n    }\n    // Update Clock\n\n}\n\n\n// All recieveable commands\nipc.on('destory-scoreboard', (e, msg) => {\n    data[msg] = null;\n    document.querySelector(`.tabs > button[scoreboard-id='${msg}']`).remove();\n    document.querySelector(`.content > div[scoreboard-id='${msg}']`).remove();\n    let scoreboards = scoreboardList();\n    let i = scoreboards.indexOf(current);\n    setscoreboardtab(scoreboards[(i + 1) % scoreboards.length]);\n});\nipc.on('set-logo', (e, msg) => {\n    data[msg.scoreboard][msg.home ? 'home' : 'guest'].logo.src = msg.image_path;\n});\nipc.on('create-scoreboard', (e, msg) => {\n    createnewscoreboard(msg);\n});\nipc.on('keyboard-input', (e, msg) => {\n    if(document.activeElement.matches('input[type=text]'))\n        return;\n    switch (msg.action) {\n        case 'home':\n            switch (msg.arg) {\n                case 'increase':\n                    changeScore(current, true, 1);\n                    break;\n                case 'decrease':\n                    changeScore(current, true, -1);\n                    break;\n            }\n            break;\n        case 'guest':\n            switch (msg.arg) {\n                case 'increase':\n                    changeScore(current, false, 1);\n                    break;\n                case 'decrease':\n                    changeScore(current, false, -1);\n                    break;\n            }\n            break;\n        case 'clock':\n            switch (msg.arg) {\n                case 'toggle':\n                    toggleClock(current);\n                    break;\n                case 'increase':\n                    clockset(current, 1000, true);\n                    break;\n                case 'decrease':\n                    clockset(current, -1000, true);\n                    break;\n            }\n            break;\n        case 'tabs': {\n            let scoreboards = scoreboardList();\n            let i = scoreboards.indexOf(current);\n            switch (msg.arg) {\n                case 'next':\n                    setscoreboardtab(scoreboards[(i + 1) % scoreboards.length]);\n                    break;\n                case 'new':\n                    ipc.send('create-scoreboard');\n                    break;\n                case 'previous': {\n                    let setto = i - 1;\n                    if (setto < 0) {\n                        setto = scoreboards.length - 1;\n                    }\n                    setscoreboardtab(scoreboards[setto]);\n                    break;\n                }\n                case 'close':\n                    if (i !== -1) {\n                        ipc.send('window-op', { id: current, action: 'close' });\n                    }\n                    break;\n            }\n            break;\n        }\n    }\n});","/**\n * @file Main file of get-in-range\n * @license LGPL-3.0\n * @author Gary Kim\n */\n\n/**\n * Returns closest value to input in given range\n * \n * @param {number} input\n * @param {number} min Minimum value of range\n * @param {number} max Maximum value of range\n * @param {boolean} [onerr] Return NaN instead of throwing error.\n * @returns {number} Closest value to input in given range\n */\nfunction getInRange(input, min, max, onerr)    {\n\n    let pinput = parseFloat(input);\n    let pmin = parseFloat(min);\n    let pmax = parseFloat(max);\n\n    if( isNaN(pmin) || isNaN(pmax) || isNaN(pinput) ) {\n        if(onerr) return NaN;\n        throw \"given a argument that is NaN\";\n    }\n\n    if(pmin > pmax) {\n        if(onerr) return NaN;\n        throw \"provided minimum value is larger then maximum value\";\n    }\n\n    if(pinput <= pmin) return pmin;\n\n    if(pinput >= pmax) return pmax;\n\n    return pinput;\n\n}\n\nmodule.exports = getInRange;\n"],"sourceRoot":""}